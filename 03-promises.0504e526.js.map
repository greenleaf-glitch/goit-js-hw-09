{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAyCjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OACS,IAAIC,QADTH,EACiB,CAACI,EAASC,KAC3BC,YAAW,IAAMF,EAAQ,C,SAAEL,E,MAAUJ,KAAUA,EAAM,EAGpC,CAACS,EAASC,KAC3BC,YAAW,IAAMD,EAAO,C,SAAEN,E,MAAUJ,KAAUA,EAAM,E,CA/C1DJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAW,GAEjBA,EAASf,MAAQgB,OAAOpB,EAAKI,MAAMiB,OACnCF,EAASd,KAAOe,OAAOpB,EAAKK,KAAKgB,OACjCF,EAASb,OAASc,OAAOpB,EAAKM,OAAOe,OAErCN,YAAW,KACT,IAAIO,EAAYH,EAASd,KAEzB,IACE,IAAIkB,EAAoB,EACxBA,EAAoBJ,EAASb,OAC7BiB,IACA,CACgBhB,EAAcgB,EAAmBD,GAG9CE,MAAK,EAAChB,SAAEA,EAAQJ,MAAEA,MACS,IAAtBmB,IAAyBnB,GAASe,EAASf,OAC/CN,EAAA2B,OAAOC,QAAQ,uBAAqBlB,QAAiBJ,MAAU,IAEhEuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MACQ,IAAtBmB,IAAyBnB,GAASe,EAASf,OAC/CN,EAAA2B,OAAOG,QAAQ,sBAAoBpB,QAAeJ,MAAU,IAGhEkB,GAAaH,EAASd,I,IAEvBc,EAASf,OAEZJ,EAAKC,KAAK4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\"),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formData = {};\n\n  formData.delay = Number(refs.delay.value);\n  formData.step = Number(refs.step.value);\n  formData.amount = Number(refs.amount.value);\n\n  setTimeout(() => {\n    let delayStep = formData.step;\n\n    for (\n      let currentPromisePos = 0;\n      currentPromisePos < formData.amount;\n      currentPromisePos++\n    ) {\n      const promise = createPromise(currentPromisePos, delayStep);\n\n      promise\n        .then(({ position, delay }) => {\n          if (currentPromisePos === 0) delay += formData.delay;\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          if (currentPromisePos === 0) delay += formData.delay;\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delayStep += formData.step;\n    }\n  }, formData.delay);\n\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve({ position, delay }), delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => reject({ position, delay }), delay);\n    });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","formData","Number","value","delayStep","currentPromisePos","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.0504e526.js.map"}