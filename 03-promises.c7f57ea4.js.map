{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAGjCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAMC,EAAW,GAEjBA,EAASN,MAAQO,OAAOX,EAAKI,MAAMQ,OACnCF,EAASL,KAAOM,OAAOX,EAAKK,KAAKO,OACjCF,EAASJ,OAASK,OAAOX,EAAKM,OAAOM,OAErCC,YAAW,WAGT,I,kBAKE,IAmBiBC,EAAUV,GAAVU,EAnBaC,EAmBHX,EAnBsBY,EAoB/BC,KAAKC,SAAW,GAG7B,IAAIC,SAAQ,SAACC,EAASC,GAC3BR,YAAW,W,OAAMO,EAAQ,CAAEN,WAAUV,S,GAAUA,E,IAG1C,IAAIe,SAAQ,SAACC,EAASC,GAC3BR,YAAW,W,OAAMQ,EAAO,CAAEP,WAAUV,S,GAAUA,E,KAzB3CkB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MACS,IAAtBW,IAAyBX,GAASM,EAASN,OAC/CN,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUV,EAAKmB,EAALnB,MACQ,IAAtBW,IAAyBX,GAASM,EAASN,OAC/CN,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANtB,EAAM,M,IAG9DY,GAAaN,EAASL,I,EAnBpBW,EAAYN,EAASL,KAGnBwB,EAAoB,EACxBA,EAAoBnB,EAASJ,OAC7BuB,IAAmBC,EAAAD,E,GAgBpBnB,EAASN,OAEZJ,EAAKC,KAAK8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\"),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const formData = {};\n\n  formData.delay = Number(refs.delay.value);\n  formData.step = Number(refs.step.value);\n  formData.amount = Number(refs.amount.value);\n\n  setTimeout(() => {\n    let delayStep = formData.step;\n\n    for (\n      let currentPromisePos = 0;\n      currentPromisePos < formData.amount;\n      currentPromisePos++\n    ) {\n      const promise = createPromise(currentPromisePos, delayStep);\n\n      promise\n        .then(({ position, delay }) => {\n          if (currentPromisePos === 0) delay += formData.delay;\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          if (currentPromisePos === 0) delay += formData.delay;\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delayStep += formData.step;\n    }\n  }, formData.delay);\n\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve({ position, delay }), delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => reject({ position, delay }), delay);\n    });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","evt","preventDefault","formData","Number","value","setTimeout","position","currentPromisePos","delayStep","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","catch","failure","currentPromisePos1","_loop","reset"],"version":3,"file":"03-promises.c7f57ea4.js.map"}